<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="application/xml" href="xsldoc/xsldoc.xsl"?><!-- xslbook-cover.xsl 0.1 Copyright (C) 2022 xslet project MIT License --><!--** xslbook-cover.xsl ver0.1 - API Document
**
 This library provides match and named templates to display book titles, subtitles, and descriptions.
 This library takes into account free positioning of them.

 This program is written in XSLT 1.0.

** Copyright (C) 2022 xslet project
** MIT License
--><xsl:stylesheet xmlns:book="https://github.com/xslet/2020/xslbook" xmlns:do="https://github.com/xslet/2020/xsldo" xmlns:ut="https://github.com/xslet/2020/xslutil" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><!--** A set of utilities for XSLT programs on Web browsers. --><xsl:import href="xslutil.xsl"/><!--** XML data operation libraries for XSLT programs on Web browsers.  --><xsl:import href="xsldo.xsl"/><!--** XML data operation elements for xslbook. --><xsl:import href="xslbook-do.xsl"/><!--** xslbook base library. --><xsl:import href="xslbook-base.xsl"/><xsl:strip-space elements="*"/><!--**
  Applies to a book title element in "book" mode.
  This match template prints a HTML <h1> element from a <title> element.
  This also prints HTML elements for sub titles from <subtitle> elements with @top-of/@left-of/@right-of/@bottom-of attributes at the same level with this <title> element.
 --><xsl:template match="title" mode="xslbook"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:variable><h1 class="title xslbook-title"><xsl:attribute name="id"><xsl:value-of select="$_id"/></xsl:attribute><xsl:for-each select="../subtitle[@top-of=$_id]"><div class="subtitle xslbook-subtitle top-of-title"><xsl:call-template name="book:_get_book_title_text_updating_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></div></xsl:for-each><xsl:for-each select="../subtitle[@left-of=$_id]"><span class="subtitle xslbook-subtitle left-of-title"><xsl:call-template name="book:_get_book_title_text_updating_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></span><xsl:value-of select="' '"/></xsl:for-each><xsl:call-template name="book:_get_book_title_text"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template><xsl:for-each select="../subtitle[@right-of=$_id]"><xsl:value-of select="' '"/><span class="subtitle xslbook-subtitle right-of-title"><xsl:call-template name="book:_get_book_title_text_updating_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></span></xsl:for-each><xsl:for-each select="../subtitle[@bottom-of=$_id]"><div class="subtitle xslbook-subtitle bottom-of-title"><xsl:call-template name="book:_get_book_title_text_updating_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></div></xsl:for-each></h1></xsl:template><!--**
  Applies to a book subtitle element in "book" mode.
  This match template prints a HTML <div> element from a <subttile> element.
 --><xsl:template match="subtitle[not(@top-of or @left-of or @right-of or @bottom-of)]" mode="xslbook"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:variable><div class="subtitle xslbook-subtitle"><xsl:attribute name="id"><xsl:value-of select="$_id"/></xsl:attribute><xsl:call-template name="book:_get_book_title_text"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></div></xsl:template><xsl:template name="book:_get_book_title_text"><xsl:param name="data_url"/><xsl:call-template name="book:get_attr"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template><xsl:apply-templates select="child::node()[name() != 'attr']"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/></xsl:apply-templates><xsl:call-template name="book:get_attr"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:template><xsl:template name="book:_get_book_title_text_updating_data_url"><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:call-template name="book:_get_book_title_text"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:template><!--**
  Prints book descriptions area by <body> elements.
 --><xsl:template match="body" mode="xslbook"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:variable><div class="body xslbook-body"><xsl:attribute name="id"><xsl:value-of select="$_id"/></xsl:attribute><xsl:apply-templates select="child::node()[name() != 'attr']"><xsl:with-param name="data_url" select="$data_url"/></xsl:apply-templates></div></xsl:template><!--**
  Makes a window title from <title> and <subtitle> element.
  This template prints contents of <title> and <subtitle> elements in the order of the appearance in a xslbook document.
  If <subtitle> element has @spine attribute of which the value is "false", the element is hidden on a window title.
 --><xsl:template name="book:get_window_title"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:variable name="_title"><xsl:for-each select="title|subtitle[not(@spine='false')]"><xsl:value-of select="' '"/><xsl:call-template name="book:_get_book_title_label"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:for-each></xsl:variable><xsl:value-of select="substring($_title, 2)"/></xsl:template><xsl:template name="book:_get_book_title_label"><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:call-template name="book:get_attr"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/></xsl:apply-templates><xsl:call-template name="book:get_attr"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:template></xsl:stylesheet>