<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="application/xml" href="xsldoc/xsldoc.xsl"?><!-- xslbook-cover.xsl 0.1 Copyright (C) 2022 xslet project MIT License --><!--** xslbook-cover.xsl ver0.1 - API Document
**
 This library provides XSL templates to display book titles, subtitles, and descriptions. These templates enables to display a book cover page or a top page of a Web document.

 Book titles are specified by <title> elements which are immediately below of a <xslbook> element. In addition, the <title> elements can display book subtitles around or independently book titles.
 If you want to display subtitles around a book title, use @top-of, @left-of, @right-of, @bottom-of attributes. By specifying @id attribute value of <title> to a @top-of attribute of a <subtitle>, the <subtitle> content is displayed above of the book title. Similarly, to @left-of attribute is on left side, @right-of attribute is on right side, and @bottom-of attribute is on bottom side. This positioning does not depend on the positions at which those <subtitle> elements are written.
 <subtitle> elements without @top-of, @left-of, @right-of, or @bottom-of are displayed according to the positions at which those <subtitle> elements are written.

 Contents of <title> and <subtitle> elements immediately below a <xslbook> element are displayed on a window title of a browser, too. As this time, the positioning by @top-of, @left-of, @right-of, or @bottom-of attribute is not applied, but their orders are applied to a window title. Hereby, it is possible that a subtitle is on the top of a title in a page but the subtitle is of the right of a title in a window title.
 Besides, it's possible not to display <subtitle> element on a window title by attaching @spine attribute of which value is 'false'.

 By uusing @prefix and/or @suffix attributes, it's possible to display texts before and/or after each <title> and <subtitle> elements. If you want to display a prefix or a suffix only in a page or only in a window title, you should use CSS. To display their prefix or suffix only in a page, use CSS pseudo-elements: ::before or ::after. To display their prefix or suffix only in a window title, use @prefix or @suffix attributes and CSS property: display:none to transformed HTML elements: <span class="prefix"> or <span class="suffix">. (Originally, @prefix and @suffix attributes are produced by reason that a prefix with ::before and a suffix with ::after cannot be displayed in a window title.)

 This program is written in XSLT 1.0.

** Copyright (C) 2022 xslet project
** MIT License
--><xsl:stylesheet xmlns:book="https://github.com/xslet/2020/xslbook" xmlns:do="https://github.com/xslet/2020/xsldo" xmlns:ut="https://github.com/xslet/2020/xslutil" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><!--** A set of utilities for XSLT programs on Web browsers. --><xsl:import href="xslutil.xsl"/><!--** XML data operation libraries for XSLT programs on Web browsers.  --><xsl:import href="xsldo.xsl"/><!--** XML data operation elements for xslbook. --><xsl:import href="xslbook-do.xsl"/><!--** xslbook base library. --><xsl:import href="xslbook-base.xsl"/><xsl:strip-space elements="*"/><!--**
  This match template is applied to <title> element immediately below the root <xslbook> element and displays a book title. In addition, this template displays subtitles around a book title by <subtitle> elements with @top-of, @left-of, @right-of, or @bottom-of attributes.
  The @mode attribute of this XSLT template is "xslbook".
  This match template can have child elements, including elements provided by xslbook-do library. And this template can have @data-src attribute to obtain data in an external XML file.
 --><xsl:template match="title" mode="xslbook"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:variable><h1 class="title xslbook-title"><xsl:attribute name="id"><xsl:value-of select="$_id"/></xsl:attribute><xsl:for-each select="../subtitle[@top-of=$_id]"><div class="subtitle xslbook-subtitle top-of-title"><xsl:attribute name="id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:attribute><xsl:call-template name="book:_get_book_title_text_updating_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></div></xsl:for-each><xsl:for-each select="../subtitle[@left-of=$_id]"><span class="subtitle xslbook-subtitle left-of-title"><xsl:attribute name="id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:attribute><xsl:call-template name="book:_get_book_title_text_updating_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></span><xsl:value-of select="' '"/></xsl:for-each><xsl:call-template name="book:_get_book_title_text"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template><xsl:for-each select="../subtitle[@right-of=$_id]"><xsl:value-of select="' '"/><span class="subtitle xslbook-subtitle right-of-title"><xsl:attribute name="id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:attribute><xsl:call-template name="book:_get_book_title_text_updating_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></span></xsl:for-each><xsl:for-each select="../subtitle[@bottom-of=$_id]"><div class="subtitle xslbook-subtitle bottom-of-title"><xsl:attribute name="id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:attribute><xsl:call-template name="book:_get_book_title_text_updating_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></div></xsl:for-each></h1></xsl:template><!--**
  This match template is applied to <subtitle> element without @top-of, @left-of, @right-of, and @bottom-of attributes and displays a book subtitle.
  This @mode attribute of this XSLT template is "xslbook".
  This match template can have child elements, including elements provided by xslbook-do library. And this template can have @data-src attribute to obtain data in an external XML file.
 --><xsl:template match="subtitle[not(@top-of or @left-of or @right-of or @bottom-of)]" mode="xslbook"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_id"><xsl:call-template name="book:get_id"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:variable><div class="subtitle xslbook-subtitle"><xsl:attribute name="id"><xsl:value-of select="$_id"/></xsl:attribute><xsl:call-template name="book:_get_book_title_text"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></div></xsl:template><xsl:template name="book:_get_book_title_text"><xsl:param name="data_url"/><xsl:variable name="_prefix"><xsl:call-template name="book:get_attr"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_suffix"><xsl:call-template name="book:get_attr"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:if test="string-length($_prefix) != 0"><span class="prefix"><xsl:value-of select="$_prefix"/></span></xsl:if><xsl:apply-templates select="child::node()[name() != 'attr']"><xsl:with-param name="data_url" select="$data_url"/></xsl:apply-templates><xsl:if test="string-length($_suffix) != 0"><span class="suffix"><xsl:value-of select="$_suffix"/></span></xsl:if></xsl:template><xsl:template name="book:_get_book_title_text_updating_data_url"><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:call-template name="book:_get_book_title_text"><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:template><!--**
  This named template makes a window title from <title> and <subtitle> element.
  This template prints contents of <title> and <subtitle> elements in the order of the appearance in a xslbook document.
  If <subtitle> element has @spine attribute of which the value is "false", the element is hidden on a window title.
 --><xsl:template name="book:get_window_title"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:variable name="_title"><xsl:for-each select="title|subtitle[not(@spine='false')]"><xsl:value-of select="' '"/><xsl:call-template name="book:_get_book_title_label"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:for-each></xsl:variable><xsl:value-of select="substring($_title, 2)"/></xsl:template><xsl:template name="book:_get_book_title_label"><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:call-template name="book:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:call-template name="book:get_attr"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/></xsl:apply-templates><xsl:call-template name="book:get_attr"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/></xsl:call-template></xsl:template></xsl:stylesheet>